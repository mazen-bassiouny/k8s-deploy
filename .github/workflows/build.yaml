name: Container Build and Trigger Deploy ## comment
on:
  push:
    branches:
      - dev
      - main 
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Trigger Deployment'
        requiered: true
        default: 'false'

env:
  CODE_SRC_FOLDER: tracktor
  REGISTRY: mazenatefdevk8sk8sreg42h.azurecr.io
  REPOSITORY: tracktor
  LOGIN_USER: ${{ secrets.AZURE_CLIENT_ID }}
  LOGIN_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  DEV_PAYLOAD: '{"registry": "bidmaindevk8sk8sreg573m.azurecr.io","repository": "tracktor","value_file": "./helm/value-dev.yml","cluster": "bid-main-dev-k8s-cluster-main-9wj4","resource_group": "bid-main-dev-k8s-rg-3gvs","release": "tracktor","namespace": "default","timeout": "10m"}'
  PROD_PAYLOAD: '{"registry": "be0aks0registry.azurecr.io","repository": "be-tracktor","value_file": "./","cluster": "hihi","resource_group": "cool_name","release": "tracktor","namespace": "tracking","timeout": "10m"}'

jobs:
  test:
    name: Test Tracktor
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.2.0

      - name: Prepare SSH-Keys
        uses: shimataro/ssh-key-action@v2.0.3
        with:
          key: ${{ secrets.CROSS_PULL_GIT_ACTIONS }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

  build:
    name: Build Tracktor
    runs-on: ubuntu-latest
    needs: test
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v2.2.0

      - name: Prepare SSH-Keys
        uses: shimataro/ssh-key-action@v2.0.3
        with:
          key: ${{ secrets.CROSS_PULL_GIT_ACTIONS }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Generate Tags
        run: |
          echo "FIRST_TAG=$(echo ${GITHUB_SHA:1:7})" >> $GITHUB_ENV
          echo $FIRST_TAG
      # step to check .. to be removed.
      - name: check Tags
        run: |
          echo $FIRST_TAG
      # Call the Docker build script with the correct variables (depending on the branch name)
      - name: Docker Build and Push "dev"
        if: ${{ endsWith(github.ref, '/dev') }}
        #if: ${{ endsWith(github.ref, '/ghactions-test') }}  
        run: |
          bash .github/scripts/docker_build_and_push.sh
     - name: Declare some variables
       id: vars
        shell: bash
        run: |
          echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
          echo "::set-output name=sha_short::$(git rev-list --parents -n 1) 

      - name: Another step
        run: |
          echo "Branch: ${{ steps.vars.outputs.branch }}"
          echo "Sha: ${{ steps.vars.outputs.sha_short }}"

      # For production:
      - name: Import and Retag 'latest' dev Image for production
        #if: ${{ endsWith(github.ref, '/master') }}
        if: ${{ endsWith(github.ref, '/main') }}
        env:
          TENANT: ${{ secrets.AZURE_CLIENT_TENANT }}
          SUBSCRIPTION: 012901f9-e5ca-44a8-b241-f4a383710f91
        run: |
          az login --service-principal -u ${LOGIN_USER} -p ${LOGIN_SECRET} --tenant ${TENANT}
          az account set --subscription=${SUBSCRIPTION}
          az acr import -n ${REGISTRY} --source ${REGISTRY}/${REPOSITORY}:latest --image ${REPOSITORY}:${FIRST_TAG}

#echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

  