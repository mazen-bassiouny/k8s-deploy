name: Deploy
on:
  deployment

jobs:
  deploy:
    name: Deploy Tracktor
    runs-on: ubuntu-latest
    env:
      ENVIRONMENT: ${{ github.event.deployment.environment }}
      REGISTRY: ${{ github.event.deployment.payload.registry }}
      REPOSITORY: ${{ github.event.deployment.payload.repository }}
      VALUE_FILE: ${{ github.event.deployment.payload.value_file}}
      CLUSTER: ${{ github.event.deployment.payload.cluster }}
      RESOURCE_GROUP: ${{ github.event.deployment.payload.resource_group }}
      RELEASE: ${{ github.event.deployment.payload.release }}
      NAMESPACE: ${{ github.event.deployment.payload.namespace }}
      TIMEOUT: ${{ github.event.deployment.payload.timeout}}
    steps:
      - name: Set Deployment Status to in_progress
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment_id/statuses
          repository: ${{ github.repository }}
          deployment_id: ${{ github.event.deployment.id }}
          mediaType: |
            previews:
              - flash
          environment: ${{ github.event.deployment.environment }}
          state: in_progress
          description: Started Deployment Pipeline
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout
        uses: actions/checkout@v2.2.0

      # Login to the correct account depending on the provided environment
      - name: Azure Login
        if: ${{ github.event.deployment.environment == 'testing' }}
        env:
          USER: ${{ secrets.AZURE_CLIENT_ID }}
          SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          TENANT: ${{ secrets.AZURE_CLIENT_TENANT }}
        run: |
          az login --service-principal -u ${USER} -p ${SECRET} --tenant ${TENANT}
          az account set --subscription="012901f9-e5ca-44a8-b241-f4a383710f91"

      # Login to the correct account depending on the provided environment
      - name: Azure Login
        if: ${{ github.event.deployment.environment == 'production' }}
        env:
          USER: ${{ secrets.AZURE_CLIENT_ID }}
          SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          TENANT: ${{ secrets.AZURE_CLIENT_TENANT }}
        run: |
          az login --service-principal -u ${USER} -p ${SECRET} --tenant ${TENANT}
          az account set --subscription=""

      - name: Docker Login
        run: |
          az acr login -n mazenatefdevk8sk8sreg42h

      - name: Set Image Name
        run: |
          echo "IMAGE_NAME=$(echo ${REGISTRY}/${REPOSITORY})" >> $GITHUB_ENV
          echo "IMAGE_TAG=$(echo ${GITHUB_SHA:0:7})" >> $GITHUB_ENV

      - name: Install kubectl
        uses: azure/setup-kubectl@v1
        # with:
        #   version: '<version>' # default is latest stable

      - name: Install helm
        uses: azure/setup-helm@v1
        # with:
        #   version: '<version>' # default is latest stable

      - name: AKS Login
        run: |
          az aks get-credentials --resource-group ${RESOURCE_GROUP} --name ${CLUSTER}

      - name: Deploy
        run: |
          kubectl get pods 

      - name: Set Deployment Status to success
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment_id/statuses
          repository: ${{ github.repository }}
          deployment_id: ${{ github.event.deployment.id }}
          mediaType: |
            previews:
              - flash
          environment: ${{ github.event.deployment.environment }}
          state: success
          description: Deployment finished succesfully
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Deployment Status to failure
        uses: octokit/request-action@v2.x
        if: ${{ failure() }}
        with:
          route: POST /repos/:repository/deployments/:deployment_id/statuses
          repository: ${{ github.repository }}
          deployment_id: ${{ github.event.deployment.id }}
          mediaType: |
            previews:
              - flash
          environment: ${{ github.event.deployment.environment }}
          state: failure
          description: The deployment failed
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
