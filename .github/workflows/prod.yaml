name: Container Build and Trigger Deploy ## comment#
on:
  push:
    branches:
      - main 
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Trigger Deployment'
        requiered: true
        default: 'false'

env:
  CODE_SRC_FOLDER: tracktor
  REGISTRY: mazenatefdevk8sk8sreg42h.azurecr.io
  REPOSITORY: tracktor
  LOGIN_USER: ${{ secrets.AZURE_CLIENT_ID }}
  LOGIN_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
  DEV_PAYLOAD: '{"registry": "bidmaindevk8sk8sreg573m.azurecr.io","repository": "tracktor","value_file": "./helm/value-dev.yml","cluster": "bid-main-dev-k8s-cluster-main-9wj4","resource_group": "bid-main-dev-k8s-rg-3gvs","release": "tracktor","namespace": "default","timeout": "10m"}'
  PROD_PAYLOAD: '{"registry": "be0aks0registry.azurecr.io","repository": "be-tracktor","value_file": "./","cluster": "hihi","resource_group": "cool_name","release": "tracktor","namespace": "tracking","timeout": "10m"}'

jobs:

  build:
    name: Build Tracktor
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v2.2.0

      - name: Prepare SSH-Keys
        uses: shimataro/ssh-key-action@v2.0.3
        with:
          key: ${{ secrets.CROSS_PULL_GIT_ACTIONS }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Generate Image Tags "dev"
        if: ${{ endsWith(github.ref, '/dev') }}
        run: |
          echo "DEV_TAG=$(echo ${GITHUB_SHA:1:7})" >> $GITHUB_ENV
      # step to check .. to be removed.
      - name: check "dev" Tag
        if: ${{ endsWith(github.ref, '/dev') }}
        run: |
          echo $Dev_TAG
      # Call the Docker build script with the correct variables (depending on the branch name)
      - name: Image Build and Push "dev"
        if: ${{ endsWith(github.ref, '/dev') }}
        run: |
         bash .github/scripts/docker_build_and_push.sh

      - name: Get the last tested and approved Tag 
        if: ${{ endsWith(github.ref, '/main') }}
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}
        run: |
         echo "PROD_TAG= \
           $(echo "$GITHUB_CONTEXT"| jq '.event.commits[].id' | tail -2 | head -1|sed 's/\"//g'| \
           cut -c2-8)" \
           >> $GITHUB_ENV
      
      - name : check "prod" Tag
        if: ${{ endsWith(github.ref, '/main') }}
        run : | 
          echo $PROD_TAG
      
      - name : Check 

  