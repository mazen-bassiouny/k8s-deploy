name: Container Build and Trigger Deploy ## comment
on:
  push:
    branches:
      - dev
  workflow_dispatch:
    inputs:
      deploy:
        description: 'Trigger Deployment'
        requiered: true
        default: 'false'

env:
  CODE_SRC_FOLDER: tracktor
  REGISTRY: mazenatefdevk8sk8sreg42h.azurecr.io
  REPOSITORY: tracktor
  DEV_PAYLOAD: '{"value_file": "./helm/values-dev.yaml","cluster": "mazen-atef-dev-k8s-cluster-main-x0l6","resource_group": "mazen-atef-dev-k8s-rg-51gx","release": "tracktor","namespace": "default","timeout": "10m"}'
  PROD_PAYLOAD: '{"value_file": "./helm/values-prod.yaml","cluster": "mazen-atef-dev-k8s-cluster-main-x0l6","resource_group": "mazen-atef-dev-k8s-rg-51gx","release": "tracktor","namespace": "prod","timeout": "10m"}'
jobs:

  build:
    name: Build Tracktor
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v2.2.0
        with: 
          fetch-depth: 0

      - name: Prepare SSH-Keys
        uses: shimataro/ssh-key-action@v2.0.3
        with:
          key: ${{ secrets.CROSS_PULL_GIT_ACTIONS }}
          known_hosts: ${{ secrets.KNOWN_HOSTS }}

      - name: Generate Image Tags "dev"
        id : dev_tag
        run: |
          echo "DEV_TAG=$(echo ${GITHUB_SHA:1:7})" >> $GITHUB_ENV
          echo "::set-output name=DEV_TAG::$(echo ${GITHUB_SHA:1:7})"
      # step to check .. to be removed.
      - name: check "dev" Tag
        run: |
          echo ${{steps.dev_tag.outputs.DEV_TAG}}

      - name: Azure Login (prod subscription) where ACR
        env:
          USER: ${{ secrets.AZURE_CLIENT_ID }}
          SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          TENANT: ${{ secrets.AZURE_CLIENT_TENANT }}
        run: |
          az login --service-principal -u ${USER} -p ${SECRET} --tenant ${TENANT}
          az account set --subscription="012901f9-e5ca-44a8-b241-f4a383710f91"
      
      - name : List all tags in the ACR
        id : tags
        run : |
          echo "::set-output name=TAGS::$(echo $(az acr repository show-tags --name ${REGISTRY} --repository ${REPOSITORY}))"
         
     # - name : check tags
     #   run : |
     #     echo${{ toJson(steps.tags.outputs.TAGS) }}
      
    #  - name : Build Image if it doesn't exist in repo  
    #    #if: $contains(${{ steps.tags.outputs.TAGS }},${DEV_TAG}) 
    #    if: ${{!contains(steps.tags.outputs.TAGS, steps.dev_tag.outputs.DEV_TAG)}}
    #    env:
    #      LOGIN_USER: ${{ secrets.AZURE_CLIENT_ID }}
    #      LOGIN_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
    #    run: |
    #     bash .github/scripts/docker_build_and_push.sh
        
      
  deploy:
    name: Trigger Deployment
    runs-on: ubuntu-latest
    needs: build
    if: ${{ endsWith(github.ref, '/master') ||  endsWith(github.ref, '/dev') || github.event.inputs.deploy == 'true' }}
    steps:
      - name: Generate Payload
        id: set-post-options
        env:
          PROD: ${{ endsWith(github.ref, '/master') }}
        run: |
          echo "::set-output name=environment::$(if ${PROD}; then echo 'production'; else echo 'testing'; fi)"
          echo "::set-output name=payload::$(if ${PROD}; then echo ${PROD_PAYLOAD}; else echo ${DEV_PAYLOAD}; fi)"

      - name: Create Deployment
        id : deployment
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments
          repository: ${{ github.repository }}
          mediaType: |
            previews:
              - flash
          ref: ${{ github.sha }}
          environment: ${{ steps.set-post-options.outputs.environment }}
          payload: ${{ steps.set-post-options.outputs.payload }}
          auto_merge: false
          required_contexts: '["Build Tracktor"]'
          description: Automatic deployment triggered from Pipeline
        env:
          GITHUB_TOKEN: ${{ secrets.SERVICE_USER_GITHUB_TOKEN }}
          # Needs a service user token because the normal GitHub Action token is not allowed to trigger other workflows:
          # https://docs.github.com/en/actions/reference/events-that-trigger-workflows#triggering-new-workflows-using-a-personal-access-token
      

      - run: "echo  ${{ toJson(steps.deployment.outputs.data) }}" 
      - name: Set Deployment Status to in_progress
        uses: octokit/request-action@v2.x
        with:
          route: POST /repos/:repository/deployments/:deployment_id/statuses
          repository: ${{ github.repository }}
          deployment_id: echo ${{ steps.deployment.outputs.data.id }}
          mediaType: |
            previews:
              - flash
          environment: ${{ steps.set-post-options.outputs.environment }}
          state: in_progress
          description: Started Deployment Pipeline
          log_url: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

